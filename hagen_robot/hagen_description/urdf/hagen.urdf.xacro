<?xml version="1.0"?>
<robot name="hagen" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="wheelbase" value="0.350" />
  <xacro:property name="track" value="0.47559" />
  <xacro:property name="wheel_vertical_offset" value="0.0345" />
  <xacro:property name="footprint_vertical_offset" value="0.15" />
  <xacro:property name="forklift_x_offset" value="-0.8" />
  <xacro:property name="forklift_y_offset" value="0.0" />
  <xacro:property name="forklift_z_offset" value="0.2" />
  <xacro:property name="forkjoint_x_offset" value="-0.48" />
  <xacro:property name="chassis_height" value="0.005" />
  <xacro:property name="chassis_length" value="0.3" />
  <xacro:property name="chassis_width" value="0.7" />
  <xacro:property name="forklift_z_offset" value="0.2" />
  <xacro:property name="forkjoint_x_offset" value="-0.48" />

  <xacro:property name="wheel_radius" value="0.098" />
  <xacro:property name="wheel_width" value="0.040" />

  <xacro:property name="lidar_3d_x" value="-0.460" />
  <xacro:property name="lidar_3d_y" value="0" />
  <xacro:property name="lidar_3d_z" value="0.5" />
  

  <xacro:property name="dummy_inertia" value="1e-09"/>
  <xacro:property name="mount_spacing" value="0.3" />

  <material name="dark_grey"><color rgba="0.6 0.4 0.9 1.0" /></material>
  <material name="light_grey"><color rgba="0.1 0.9 0.3 1.0" /></material>
  <material name="yellow"><color rgba="0.8 0.8 0.0 1.0" /></material>
  <material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>
  <material name="dark"><color rgba="0.3 0.3 0.3 1.0"/></material>
  <material name="light_black"><color rgba="0.4 0.4 0.4 1.0"/></material>
  <material name="blue"> <color rgba="0.0 0.0 0.8 1.0"/> </material>
  <material name="light_blue"><color rgba="0.3 0.3 0.8 1.0"/> </material>
  <material name="green"> <color rgba="0.0 0.8 0.0 1.0"/></material>
  <material name="grey"><color rgba="0.5 0.5 0.5 1.0"/></material>
  <material name="orange"><color rgba="${255/255} ${108/255} ${10/255} 1.0"/></material>
  <material name="brown"><color rgba="${222/255} ${207/255} ${195/255} 1.0"/></material>
  <material name="red"><color rgba="0.8 0.0 0.0 1.0"/> </material>
  <material name="white"> <color rgba="1.0 1.0 1.0 1.0"/></material>

  <xacro:macro name="wheel" params="prefix *joint_pose">

    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <mesh filename="package://hagen_description/meshes/hagen-wheel.stl"/>
        </geometry>
        <material name="black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.477"/>
        <inertia
          ixx="0.0013" ixy="0" ixz="0"
          iyy="0.0024" iyz="0"
          izz="0.0013"/>
      </inertial>
    </link>

    <gazebo reference="${prefix}_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <selfCollide>false</selfCollide>
      <mu1 value="0.5"/>
      <mu2 value="0.5"/>
      <kp value="10000000.0" />
      <kd value="1" />
      <fdir1 value="1 0 0"/>
    </gazebo>

    <joint name="${prefix}_wheel" type="continuous">
      <parent link="chassis_link"/>
      <child link="${prefix}_wheel_link" />
      <xacro:insert_block name="joint_pose" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- In reality, hagen has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_wheel">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_actuator">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="front_left">
    <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="front_right">
    <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_left">
    <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_right">
    <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>


  <link name="base_link"></link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="chassis_link" />
  </joint>

  <joint name="forklift_base_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="chassis_link" />
    <child link="forklift_base_link" />
  </joint>

  <link name="chassis_link">
    <visual>
      <origin xyz="0 0 ${footprint_vertical_offset}" rpy="${PI/2} 0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://hagen_description/meshes/base_new.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <!-- <material name="dark_grey" /> -->
    </visual>
    <collision>
      <origin xyz="-0.37 0 0.35"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_width}"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>
      <mass value="5.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia
        ixx="0.3136" ixy="-0.0008" ixz="0.0164"
        iyy="0.3922" iyz="-0.0009"
        izz="0.4485"/>
      </inertial>
  </link>

  <link name="forklift_base_link">
    <visual>
      <origin xyz="${forklift_x_offset} ${forklift_y_offset} ${forklift_z_offset}" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://hagen_description/meshes/bases/forklift_base.stl" scale="0.03 0.03 0.01"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0.2 0 0.14" rpy="0 0 0"/>
      <geometry>
        <box size="0.15 0.2 0.001"/>
      </geometry>
      <material name="orange"/>
    </collision>
    <inertial>
      <origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>
      <mass value="1.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia
        ixx="0.3136" ixy="-0.0008" ixz="0.0164"
        iyy="0.3922" iyz="-0.0009"
        izz="0.4485"/>
    </inertial>
  </link>

  <joint name="fork_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="chassis_link"/>
      <child link="fork_base_link"/>
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="0" upper="1.0" velocity="0.05"/>
  </joint>

  <link name="fork_base_link">
    <visual>
      <origin xyz="${forkjoint_x_offset} ${forklift_y_offset} ${forklift_z_offset}" rpy="0 0 ${PI}"/>
      <geometry>
        <mesh filename="package://hagen_description/meshes/bases/forklift_fork.stl" scale="0.02 0.03 0.01"/>
      </geometry>
      <material name="black"/>
    </visual>

    <collision>
      <origin xyz="0.0 0 0.5" rpy="0 0 0"/>
      <geometry>
        <box size="0.24 0.1 0.008"/>
      </geometry>
      <material name="orange"/>
    </collision>

    <inertial>
      <!-- Center of mass -->
      <origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>
      <mass value="0.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia
        ixx="0.0136" ixy="-0.0008" ixz="0.0064"
        iyy="0.0922" iyz="-0.0009"
        izz="0.0485"/>
    </inertial>
  </link>

  <!-- <xacro:if value="$(arg use_ros_control_for_base)"> -->
  <!-- <xacro:simple_transmission name="fork_joint" interface="PositionJointInterface"/> -->
  <!-- </xacro:if> -->


  <xacro:unless value="$(optenv hagen_FRONT_ACCESSORY_FENDER 0)">
    <link name="front_fender_link">
      <visual>
        <geometry>
          <mesh filename="package://hagen_description/meshes/hagen-fender.stl" scale="1 1.6 1"/>
        </geometry>
        <material name="yellow" />
      </visual>
    </link>
  </xacro:unless>

  <xacro:if value="$(optenv hagen_FRONT_ACCESSORY_FENDER 0)">
    <link name="front_fender_link">
      <visual>
        <geometry>
          <mesh filename="package://hagen_description/meshes/accessory_fender.stl" />
        </geometry>
        <material name="yellow" />
      </visual>
    </link>

    <link name="front_fender_accessory_link"/>
    <joint name="front_fender_accessory_joint" type="fixed">
      <origin xyz="0.25629 0 0.07455" rpy="${PI} 0 0" />
      <parent link="front_fender_link" />
      <child link="front_fender_accessory_link" />
    </joint>
  </xacro:if>


  <joint name="front_fender_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="chassis_link" />
    <child link="front_fender_link" />
  </joint>

  <xacro:unless value="$(optenv hagen_REAR_ACCESSORY_FENDER 0)">
    <link name="rear_fender_link">
      <visual>
        <geometry>
          <mesh filename="package://hagen_description/meshes/hagen-fender.stl" scale="1 1.6 1"/>
        </geometry>
        <material name="yellow" />
      </visual>
    </link>
  </xacro:unless>

  <xacro:if value="$(optenv hagen_REAR_ACCESSORY_FENDER 0)">
    <link name="rear_fender_link">
      <visual>
        <geometry>
          <mesh filename="package://hagen_description/meshes/accessory_fender.stl"/>
        </geometry>
        <material name="yellow" />
      </visual>
    </link>

    <link name="rear_fender_accessory_link"/>
    <joint name="rear_fender_accessory_joint" type="fixed">
      <origin xyz="0.25629 0 0.07455" rpy="${PI} 0 0" />
      <parent link="rear_fender_link" />
      <child link="rear_fender_accessory_link" />
    </joint>
  </xacro:if>

  <joint name="rear_fender_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 ${PI}"/>
    <parent link="chassis_link" />
    <child link="rear_fender_link" />
  </joint>

  <!-- TODO: Make this internal_imu_link or something, and use a mixed-in xacro
       to supply the joint between it and imu_link. This is important so that imu_link
       always points to the "active" IMU. When an upgrade IMU is connected, the
       internal_imu_link should remain, but imu_link should point to the upgrade one. -->
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="imu_link" />
  </joint>

  <!-- TODO: Same note as applies to imu_link -->
  <link name="navsat_link">
    <visual>
      <geometry>
        <cylinder radius="0.026" length="0.016" />
      </geometry>
      <origin xyz="0 0 0.008" />
      <material name="black" />
    </visual>
  </link>
  <joint name="navsat_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="navsat_link" />
    <origin xyz="-0.180 0.126 0.1815" />
  </joint>

  <!--
    Optionally add a GX5 IMU
  -->
  <xacro:if value="$(optenv hagen_GX5_IMU 0)">
    <link name="gx5_link" />
    <joint name="gx5_joint" type="fixed">
      <parent link="base_link" />
      <child link="gx5_link" />
      <!-- TODO This offset & rotation may not be final, but it's good enough for now.  May update, pending RSCI-10 -->
      <origin xyz="$(optenv hagen_GX5_IMU_OFFSET -0.139 0.096 0.100)" rpy="$(optenv hagen_GX5_IMU_RPY ${PI} 0 -${PI/2})" />
    </joint>
  </xacro:if>

  <link name="mid_mount"></link>
  <joint name="mid_mount_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="mid_mount" />
     <origin xyz="${lidar_3d_x} ${lidar_3d_y} ${lidar_3d_z}" />
  </joint>

  <link name="rear_mount"></link>
  <joint name="rear_mount_joint" type="fixed">
    <parent link="mid_mount" />
    <child link="rear_mount" />
    <origin xyz="${-mount_spacing} 0 0" />
  </joint>

  <link name="front_mount"></link>
  <joint name="front_mount_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="front_mount" />
    <origin xyz="${mount_spacing} 0 0.16" />
  </joint>

  <!-- Bring in simulation data for Gazebo. -->
  <xacro:include filename="$(find hagen_description)/urdf/hagen.gazebo" />

  <!-- Optional standard accessories, including their simulation data. The rendering
       of these into the final description is controlled by optenv variables, which
       default each one to off.-->
  <xacro:include filename="$(find hagen_description)/urdf/accessories.urdf.xacro" />

  <!-- Optional custom includes. -->
  <xacro:include filename="$(optenv hagen_URDF_EXTRAS empty.urdf)" />

  <!-- Optional for Clearpath internal softwares -->
  <xacro:include filename="$(optenv CPR_URDF_EXTRAS empty.urdf)" />

  
  <!-- <xacro:include filename="$(find hagen_description)/urdf/utils.urdf.xacro"/> -->
  <!-- <xacro:include filename="$(find hagen_description)/urdf/plugins.gazebo.xacro"/> -->
  <!-- <xacro:include filename="$(find hagen_description)/urdf/base/forklift_base.urdf.xacro"/> -->
</robot>
